 import numpy as np
import pandas as pd
from flask import Flask, render_template, request
import pickle

app = Flask(__name__)

# Load the dataset and the trained model
data = pd.read_csv('Cleaned_data.csv')
pipe = pickle.load(open("RidgeModel.pk1", "rb"))

@app.route('/')
def index():
    # Get unique locations for the dropdown
    locations = sorted(data['location'].unique())
    return render_template('index.html', locations=locations)

@app.route('/predict', methods=['POST'])
def predict():
    # Get form data
    location = request.form.get('location')
    bhk = request.form.get('bhk')
    bath = request.form.get('bath')
    sqft = request.form.get('total_sqft')

    # Print the received input for debugging
    print(f"Received input: location={location}, bhk={bhk}, bath={bath}, sqft={sqft}")

    # Create a DataFrame from the input
    input_df = pd.DataFrame([[location, sqft, bath, bhk]], 
                            columns=['location', 'total_sqft', 'bath', 'bhk'])

    # Ensure input data is correctly formatted
    print(f"Input DataFrame:\n{input_df}")

    # Make prediction
    try:
        prediction = pipe.predict(input_df)[0] * 1e5
        result = np.round(prediction, 2)
        print(f"Prediction: {result}")
        return str(result)
    except Exception as e:
        print(f"Error during prediction: {e}")
        return "An error occurred during prediction."

if __name__ == "__main__":
    app.run(debug=True, port=5001)
